@model  IQueryable<ConestogaConnect.ViewModels.CommentsVM>
@using ConestogaConnect.ViewModels;

@Html.AntiForgeryToken()



<div class="container bootstrap snippet">
    <div class="row">
        <div class="col-md-12">
            <div class="blog-comment">
                <h3 class="text-success">Comments</h3>
                <hr />
                <ul class="comments">

                    @if (Model != null)
                    { 


                    foreach (CommentsVM comment in Model)
                    {

                    <li class="clearfix @comment.Id" data-id="@comment.Id">
                        
                        <div class="post-comments">
                            <div class="comneImg pull-left">
                                <img src="~/Content/Images/user.png" alt="" width="40">
                            </div>

                            <div class="commnetDetail col-md-pull-2">
                                 <p class="meta"><a href="#"> @comment.Users.UserName</a> @string.Format("{0:MMM dd, yyyy }", @comment.CommentDate)  <span class="glyphicon glyphicon-trash deleteComment pull-right" data-id="@comment.Id"></span> <i class="pull-right"><a href="#" class="Reply" data-id="@comment.Id"><small>  Reply</small></a></i></p>
                            
                                <p> @comment.CommentMessage</p>
                            </div>

                            <div class="ReplayCommentInput">
                                <input type="text" id="@string.Format("{0}_{1}", "inputReplay", comment.Id)" class="form-control" placeholder="Add a Comment ..." style="display: inline;" />
                                <button type="button" class="btn btn-default ReplyAddComment" data-id="@comment.Id"><span class="glyphicon glyphicon-comment" aria-hidden="true"></span></button>
                            </div>

                        </div>
                    </li>



                        }


                    }


                </ul>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">

   // $(document).ready(function () {
    getSubComments();
        //Get All ReplyComment
     //$('.Reply').on('click', function () {

    function getSubComments() {
        console.log("donedd");

        $('.Reply').each(function (i, obj) {
            console.log("yyy");
            var ComID = $(this).attr('data-id');
            //alert(ComID);
            $.ajax({

                type: 'GET',
                url: '@Url.Action("GetSubComments", "Discussion")',
                data: { ComID },
                success: function (response) {
                    console.log("success-sub-comments");
                    if ($('div').hasClass('zoneReply_' + ComID + '')) {
                        $('div [class=zoneReply_' + ComID + ']').remove();
                    }

                    var selReply = $("<div>").addClass('zoneReply_' + ComID);

                    selReply.append(response);
                    selReply.appendTo($('.clearfix.' + ComID));

                    $('.ReplayComments_' + ComID).show();

                },
                error: function (response) {
                    alert('something Wrong');
                }
            });
        });
    }
       // });

        //Add Reply Comment
    $('.ReplyAddComment').on('click', function () {
           var ComID = $(this).attr('data-id');
           var CommentMsg = $('#inputReplay_' + ComID).val();
           
            var dateTimeNow = new Date();

            var subComment = {
                CommentMsg: CommentMsg,
                CommentedDate: dateTimeNow.toLocaleString()
            };


            $.ajax({

                type: 'POST',
                url: '@Url.Action("AddSubComment", "Discussion")',
                data: { CommentMsg, ComID },
                success: function (response) {
                    $('#inputReplay_' + ComID).val('');

                    if ($('div').hasClass('zoneReply_' + ComID + '')) {
                        $('div [class=zoneReply_' + ComID + ']').remove();
                    }

                    var selReply = $("<div>").addClass('zoneReply_' + ComID);

                    selReply.append(response);
                    selReply.prependTo($('.ReplayComments_' + ComID));

                    $('.ReplayComments_' + ComID).show();
                    getSubComments();
                    //$('#inputReplay_' + ComID).val('');
                    alert('Comment posted successfully');
                },
                error: function (response) {
                    alert('something Wrong');
                }
            });

    });

    $('.deleteComment').on('click', function () {

        var ComID = $(this).attr('data-id');
        //alert(ComID);

               $.ajax({

                type: 'POST',
                url: '@Url.Action("Delete", "Discussion")',
                data: {id: ComID },
                success: function (response) {
                    getSubComments();
                },
                error: function (response) {
                    alert('Something Wrong');
                }
            });

    });


        //jQuery("time.timeago").timeago();


    //})
</script>
