@model IEnumerable<ConestogaConnect.Models.Tutor>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="body-content">
    <h2>Tutors</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <fieldset>
        <legend>Search</legend>
        @using (Html.BeginForm("Index", "Tutors", FormMethod.Get))
        {
            <div class="row">
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Tutor Name</div>
                    <div class="col-sm-8">@Html.TextBox("tname", null, new { @class = "form-control" }) </div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Course</div>
                    <div class="col-sm-8">@Html.TextBox("crs", null, new { @class = "form-control" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Availablity</div>
                    <div class="col-sm-8">@Html.TextBox("avl", null, new { @class = "form-control" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Description </div>
                    <div class="col-sm-8">@Html.TextBox("desc", null, new { @class = "form-control" })</div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Program</div>
                    <div class="col-sm-8">@Html.DropDownList("program", (IEnumerable<SelectListItem>)ViewBag.program, "Select Program", new { @class = "form-control" }) </div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Email</div>
                    <div class="col-sm-8">@Html.TextBox("email", null, new { @class = "form-control" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Phone</div>
                    <div class="col-sm-8">@Html.TextBox("phn", null, new { @class = "form-control" })</div>
                </div>

            </div>

            <div class="row">
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Added From</div>
                    <div class="col-sm-8">@Html.TextBox("afrom", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Added To</div>
                    <div class="col-sm-8">@Html.TextBox("ato", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Updated From</div>
                    <div class="col-sm-8">@Html.TextBox("ufrom", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Updated To</div>
                    <div class="col-sm-8">@Html.TextBox("uto", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>
            </div>

            <div class="row">

                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4"></div>
                    <div class="col-sm-8"><input type="submit" value="Search" class="btn btn-default" /></div>

                </div>
            </div>
        }
    </fieldset>

    <hr>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Tutor_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Program)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Availability)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AddedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedOn)
            </th>


            <th></th>
        </tr>

        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Tutor_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Program1.ProgramName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Course)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Availability)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @string.Format("{0:MMM dd, yyyy HH:mm tt}", item.AddedOn)
            </td>
            <td>
                @string.Format("{0:MMM dd, yyyy HH:mm tt}", item.UpdatedOn)
            </td>


            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
        }

    </table>
</div>


<link href="~/Content/datepicker/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/datepicker/jquery-ui.structure.css" rel="stylesheet" />
<link href="~/Content/datepicker/jquery-ui.theme.css" rel="stylesheet" />
<script src="~/Content/datepicker/jquery-ui.js"></script>

<script type="text/javascript">
    var dateFormat = "dd/mm/yy";
    $(document).ready(function () {
        var pdfrom = $("#afrom").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            dateFormat: dateFormat,
            numberOfMonths: 1
        }).on("change", function () {
            pdto.datepicker("option", "minDate", getDate(this));
        }),
            pdto = $("#ato").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                dateFormat: dateFormat,
                numberOfMonths: 1
            }).on("change", function () {
                pdfrom.datepicker("option", "maxDate", getDate(this));
            });

        var ufrom = $("#ufrom").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            dateFormat: dateFormat,
            numberOfMonths: 1
        }).on("change", function () {
            uto.datepicker("option", "minDate", getDate(this));
        }),
            uto = $("#uto").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                dateFormat: dateFormat,
                numberOfMonths: 1
            }).on("change", function () {
                ufrom.datepicker("option", "maxDate", getDate(this));
            });
    });

    function getDate(element) {
        var date;
        try {
            date = $.datepicker.parseDate(dateFormat, element.value);
        } catch (error) {
            date = null;
        }
        return date;
    }
</script>