@model IEnumerable<ConestogaConnect.Models.ActivityViewModel>
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Index";
}


<div class="body-content">

    <h2>Activities</h2>

    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
    </p>

    <fieldset>
        <legend>Search</legend>
        @using (Html.BeginForm("Index", "Activities", FormMethod.Get))
        {
            <div class="row">
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Activity Name</div>
                    <div class="col-sm-8">@Html.TextBox("name", null, new { @class = "form-control" }) </div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Description</div>
                    <div class="col-sm-8">@Html.TextBox("desc", null, new { @class = "form-control" })</div>
                </div>
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Activity Type</div>
                    <div class="col-sm-8">@Html.DropDownList("types", (IEnumerable<SelectListItem>)ViewBag.types, "Select Activity", new { @class = "form-control" })</div>
                </div>
            </div>


            <div class="row">
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Added From</div>
                    <div class="col-sm-8">
                        @Html.TextBox("afrom", null, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Added To</div>
                    <div class="col-sm-8">@Html.TextBox("ato", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>

                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Updated From</div>
                    <div class="col-sm-8">@Html.TextBox("ufrom", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>

                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4">Updated To</div>
                    <div class="col-sm-8">@Html.TextBox("uto", null, new { @class = "form-control", @readonly = "readonly" })</div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-md-3">
                    <div class="col-sm-4"></div>
                    <div class="col-sm-6"><input type="submit" value="Search" class="btn btn-default" /></div>

                </div>
            </div>
        }
    </fieldset>
    <hr />
</div>


<section class="postSection">
    <div class="container">
        <div class="row">

            <div class="col-sm-2" ?>
                @{ Html.RenderPartial("_SideLinks"); }
            </div>

            <div class="col-sm-7">
                <div class="postInner">
                    @foreach (var item in Model)
                    {
                        <div class="postBox">
                            <div class="postHeader clearfix">
                                <div class="postWriter pull-left">
                                    <img src="images/profile.jpg" alt="" width="40">
                                    <span class="postName"> @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</span>
                                </div>
                                <div class="pull-right datePost">
                                    <span>@string.Format("{0:MMM dd, yyyy HH:mm tt}", item.Added_On)</span>
                                </div>
                            </div>


                            <div class="postDetail">
                                <p>
                                    @if (item.ActivityName != null)
                                    {
                                        @Html.Raw("Activity Name : ")
                                    <strong>@Html.DisplayFor(modelItem => item.ActivityName)@Html.DisplayFor(modelItem => item.FirstName) </strong>
                                    }
                                </p>

                                <p>
                                    @if (item.Description != null)
                                    {
                                        @Html.Raw("Description : ")
                                        <strong>@Html.DisplayFor(modelItem => item.Description) </strong>
                                    }
                                </p>

                                <p>
                                   
                                        @Html.Raw("Activity type : ")
                                    <strong>@Html.DisplayFor(modelItem => item.ActivityType.ActivityType1) </strong>
                                    
                                </p>

                                <p>
                                    @if (User.Identity.GetUserId() == item.UserId)
                                    {
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                        @Html.Raw(" | ")
                                    }

                                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                                    @if (User.Identity.GetUserId() == item.UserId)
                                    {
                                        @Html.Raw(" | ")
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                    }

                                    @if (!item.ShownInterest && User.Identity.GetUserId() != item.UserId)
                                    {
                                   
                                        @Html.Raw(" | ")
                                        @Html.ActionLink(item.ShownInterest ? "Hide Interest" : "Show Interest", "ShowInterest", new { id = item.Id })

                                    }
                                    else
                                    {
                                        @Html.Raw(" | ")
                                        @Html.Raw("Users interested : " + ViewBag.InterestedUsers)
                                    }
                                </p>


                            </div>

                        </div>


                    }
                </div>
            </div>


            <div class="col-sm-3">
                <div class="newsFeed">
                    <h4>News</h4>
                    @{Html.RenderAction("_NewsFeedPartial", "NewsFeeds");}
                </div>
            </div>
        </div>
    </div>
</section>

<link href="~/Content/datepicker/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/datepicker/jquery-ui.structure.css" rel="stylesheet" />
<link href="~/Content/datepicker/jquery-ui.theme.css" rel="stylesheet" />
<script src="~/Content/datepicker/jquery-ui.js"></script>

<script type="text/javascript">
    var dateFormat = "dd/mm/yy";
    $(document).ready(function () {
        var pdfrom = $("#afrom").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            dateFormat: dateFormat,
            numberOfMonths: 1
        }).on("change", function () {
            pdto.datepicker("option", "minDate", getDate(this));
        }),
            pdto = $("#ato").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                dateFormat: dateFormat,
                numberOfMonths: 1
            }).on("change", function () {
                pdfrom.datepicker("option", "maxDate", getDate(this));
            });

        var ufrom = $("#ufrom").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            dateFormat: dateFormat,
            numberOfMonths: 1
        }).on("change", function () {
            uto.datepicker("option", "minDate", getDate(this));
        }),
            uto = $("#uto").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                dateFormat: dateFormat,
                numberOfMonths: 1
            }).on("change", function () {
                ufrom.datepicker("option", "maxDate", getDate(this));
            });
    });

    function getDate(element) {
        var date;
        try {
            date = $.datepicker.parseDate(dateFormat, element.value);
        } catch (error) {
            date = null;
        }
        return date;
    }
</script>