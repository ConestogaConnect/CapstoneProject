@model IEnumerable<ConestogaConnect.Models.MeetingViewModel>

@{
    ViewBag.Title = "Meetings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="body-content">
    <h2>Meetings</h2>

    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
    </p>
  
    <hr>


    <div class="container">

        <div class="row">
            <div class="col-sm-2" ?>
                @{ Html.RenderPartial("_SideLinks"); }
            </div>

            <div class="col-sm-7">

                <div class="postInner">
                    @foreach (var item in Model)
                    {
                        <div class="postBox">
                            <div class="postHeader clearfix">
                                <div class="postWriter pull-left">
                                    <img src="~/Content/Images/user.png" alt="" width="40">
                                    <span class="postName"> @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</span>
                                </div>
                                <div class="pull-right datePost">
                                    <span>
                                        @string.Format("{0:MMM dd, yyyy HH:mm tt}", item.AddedOn)
                                    </span>
                                </div>
                            </div>

                            <div class="postDetail">
                                <p>@Html.DisplayFor(modelItem => item.MeetingTitle) </p>
                                <hr>
                                <p>
                                    @if (item.Subject != null)
                                    {
                                        <strong>Meeting Subject: </strong>@Html.DisplayFor(modelItem => item.Subject)
                                    }
                                </p>
                                <p>
                                    <strong>Meeting Date Time: </strong>@string.Format("{0:MMM dd, yyyy HH:mm tt}", item.MeetingDateTime)
                                </p>
                                <p>
                                    @if (item.Location != null)
                                    {
                                        <strong>@Html.Raw("Location: ")</strong>
                                        @Html.DisplayFor(modelItem => item.Location)
                                    }
                                </p>
                                <p>
                                    @if (item.ProgramName != "")
                                    {
                                        @Html.Raw("This meeting is for ")
                                        <strong>@Html.DisplayFor(modelItem => item.ProgramName) </strong>
                                    }
                                </p>
                                <p>
                                    @if (item.Semester != null)
                                    {
                                        @Html.Raw("This meeting is for Semester : ")
                                        <strong>@Html.DisplayFor(modelItem => item.Semester) </strong>
                                    }
                                </p>
                                <p> @Html.DisplayFor(modelItem => item.Description)</p>
                                <p>

                                    @if (User.Identity.Name != item.AddedBy && item.IsSms == true && item.IsAccepted == true)
                                    {

                                        @Html.ActionLink("Reject", "Accept", new { id = item.Id }, new { @class = "reject" })
                                    }

                                    @if (User.Identity.Name != item.AddedBy && item.IsSms == true && item.IsAccepted == false)
                                    {
                                        @Html.ActionLink("Accept", "Accept", new { id = item.Id }, new { @class = "accept" })

                                    }

                                    @Html.Raw(" | ")


                                    @if (User.Identity.Name != item.AddedBy && item.IsSms == false)
                                    {
                                        @Html.ActionLink(item.IsAccepted ? "Reject" : "Accept", "Accept", new { id = item.Id })
                                        @Html.Raw(" | ")
                                    }


                                    @if (User.Identity.Name == item.AddedBy)
                                    {
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id });
                                        @Html.Raw(" | ");
                                    }

                                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                                    @if (User.Identity.Name == item.AddedBy)
                                    {
                                        @Html.Raw(" | ");
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                    }

                                    @if (!item.ShownInterest && User.Identity.Name != item.AddedBy)
                                    {
                                        @Html.Raw(" | ")
                                        @Html.ActionLink(item.ShownInterest ? "Hide Interest" : "Show Interest", "ShowInterest", new { id = item.Id })

                                    }
                                    
                                        @Html.Raw(" | ")
                                        @Html.Raw("Users interested : " + item.InterestedUsers)
                                    
                                </p>
                            </div>

                        </div>

                    }
                </div>

            </div>


            <div class="col-sm-3">
                <div class="newsFeed">
                    <h4>News</h4>
                    @{Html.RenderAction("_NewsFeedPartial", "NewsFeeds");}
                </div>
            </div>
        </div>
    </div>
</div>

    <link href="~/Content/datepicker/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/datepicker/jquery-ui.structure.css" rel="stylesheet" />
    <link href="~/Content/datepicker/jquery-ui.theme.css" rel="stylesheet" />
    <script src="~/Content/datepicker/jquery-ui.js"></script>


@*<script>
    $(".accept").click(function () {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "https://platform.clickatell.com/messages/http/send?apiKey=ny4ZO3J5TN6d0sanwYd05A==&to=+16475372344&content=Meeting+is+accepted", true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                console.log('sms sent');
            }
        };
        xhr.send();

        return true;
    });

    $(".reject").click(function () {
        console.log("rejected");
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "https://platform.clickatell.com/messages/http/send?apiKey=ny4ZO3J5TN6d0sanwYd05A==&to=+16475372344&content=Meeting+is+rejected", true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                console.log('sms sent');
            }
        };
        xhr.send();

        return true;
    });

</script>*@

    <script type="text/javascript">
        var dateFormat = "dd/mm/yy";
    $(document).ready(function () {
        var pdfrom = $("#mfrom").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            dateFormat: dateFormat,
            numberOfMonths: 1
        }).on("change", function () {
            pdto.datepicker("option", "minDate", getDate(this));
        }),
            pdto = $("#mto").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                dateFormat: dateFormat,
                numberOfMonths: 1
            }).on("change", function () {
                pdfrom.datepicker("option", "maxDate", getDate(this));
            });

        var ufrom = $("#afrom").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            dateFormat: dateFormat,
            numberOfMonths: 1
        }).on("change", function () {
            uto.datepicker("option", "minDate", getDate(this));
        }),
            uto = $("#ato").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                dateFormat: dateFormat,
                numberOfMonths: 1
            }).on("change", function () {
                ufrom.datepicker("option", "maxDate", getDate(this));
            });
    });

    function getDate(element) {
        var date;
        try {
            date = $.datepicker.parseDate(dateFormat, element.value);
        } catch (error) {
            date = null;
        }
        return date;
    }
    </script>
